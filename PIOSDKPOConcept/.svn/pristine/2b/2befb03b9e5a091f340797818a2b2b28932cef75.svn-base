package com.example.piosdkpoconcept;

import java.util.ArrayList;

import print.io.Constants;
import print.io.PIO;
import print.io.PIOActivity;
import print.io.PIOCallback;
import print.io.PIOException;
import android.app.Activity;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Color;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.provider.MediaStore.Images;
import android.support.v4.content.Loader;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.TextView;

public class MainActivity extends Activity implements
		android.app.LoaderManager.LoaderCallbacks<Cursor> {

	private String[] images;
	private ArrayList<String> imageLists = new ArrayList<String>();

	private static final int IMAGES_CURSOR_LOADER = 0xA1;

	private PIOCallback callback = new PIOCallback() {

		@Override
		public void onOrderComplete() {
			((TextView) findViewById(R.id.text_view))
					.setText("Order completed!");
		}

		@Override
		public void onCartChange(int count) {
			((TextView) findViewById(R.id.text_view)).setText("Cart changed");
		}
	};

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		getLoaderManager().initLoader(IMAGES_CURSOR_LOADER, null,
				(android.app.LoaderManager.LoaderCallbacks<Cursor>) this)
				.forceLoad();
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	public void clicked(View v) {
		images = new String[imageLists.size()];
		images = imageLists.toArray(images);
		PIO.setSideMenuEnabled(false);
		PIO.setCanUseUpload( ((CheckBox)findViewById(R.id.checkImage)).isChecked() );
		for (String string : images) {
			Log.d("image array", string);
		}
		PIO.setImagesUrls(images);
		
		String coutry = ((EditText)findViewById(R.id.editCountry)).getText().toString();
		if(coutry.length() == 2) {
		PIO.setCountryCode(coutry);
		}
		
		String colorString = ((EditText)findViewById(R.id.editColorHex)).getText().toString();
		try{
		int colorHex = Color.parseColor("#"+colorString);
		PIO.setHeaderColor(colorHex);
		}catch (NumberFormatException e) { 
		}
		
		//PIO.setProductIdFromApp(Constants.ProductIds.PHONE_CASES);
		PIO.setFontPathInAssetsLight("HelveticaNeueLTStd-Lt.otf");
		PIO.setFontPathInAssetsNormal("HelveticaNeueLTStd-Roman.otf");
		PIO.setFontPathInAssetsBold("HelveticaNeueLTStd-Bd.otf");
		PIO.setRecipeID("00000000-0000-0000-0000-000000000000");
		try {
			PIO.start(this, callback);
		} catch (PIOException e) {
			e.printStackTrace();
		}
	}

	@Override
	public android.content.Loader<Cursor> onCreateLoader(int i, Bundle bundle) {
		Uri uriPhoneImages = Images.Media.EXTERNAL_CONTENT_URI;
		String[] projection = { MediaStore.Images.ImageColumns._ID,
				MediaStore.Images.ImageColumns.DATA,
				MediaStore.Images.ImageColumns.BUCKET_DISPLAY_NAME };
		String sortOrder = MediaStore.Images.ImageColumns.DATE_TAKEN + " DESC";
		return new android.content.CursorLoader(this, uriPhoneImages,
				projection, null, null, sortOrder);
	}

	@Override
	public void onLoadFinished(android.content.Loader<Cursor> loader,
			Cursor cursor) {
		images = new String[3];
		int index = 0;
		if (cursor != null) {
			while (cursor.moveToNext()) {
				if (index >= images.length) {
					break;
				}
				images[index] = cursor.getString(1);
				index++;
			}
		}
	}

	@Override
	public void onLoaderReset(android.content.Loader<Cursor> arg0) {

	}
	public void clickAdd(View v) {
		Intent intent = new Intent();
        intent.setType("image/*");
        intent.setAction(Intent.ACTION_GET_CONTENT);
        intent.addCategory(Intent.CATEGORY_OPENABLE);
        startActivityForResult(intent, 1);
	}
	
	@Override
	public void onActivityResult(int requestCode, int resultCode, Intent data) {
	        if (requestCode == 1 && resultCode == Activity.RESULT_OK){
        				Log.d("Image", "kurac "+ getPath(data.getData()));
	                     imageLists.add(getPath(data.getData()));
	        }
	          
	        super.onActivityResult(requestCode, resultCode, data);
	    }
	/**
     * helper to retrieve the path of an image URI
     */
    public String getPath(Uri uri) {
            // just some safety built in 
            if( uri == null ) {
                // TODO perform some logging or show user feedback
                return null;
            }
            // try to retrieve the image from the media store first
            // this will only work for images selected from gallery
            String[] projection = { MediaStore.Images.Media.DATA };
            Cursor cursor = managedQuery(uri, projection, null, null, null);
            if( cursor != null ){
                int column_index = cursor
                .getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
                cursor.moveToFirst();
                return cursor.getString(column_index);
            }
            // this is our fallback here
            return uri.getPath();
    }
}
